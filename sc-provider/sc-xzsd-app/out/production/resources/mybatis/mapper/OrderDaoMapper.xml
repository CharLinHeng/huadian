<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xzsd.app.order.dao.OrderDao">
    <!--增加订单-->
    <insert id="addUserOrder" parameterType="com.xzsd.app.order.entity.AddOrder">
        INSERT
            INTO
              `t_order_manage`(
                `order_code`,
                `user_code`,
                `order_state`,
                `order_play_state`,
                `order_sure_pay_time`,
                `create_time`,
                `create_user`,
                `is_delete`,
                `version`
              )
            VALUES(
                #{orderCode},
                #{userCode},
                1,
                1,
                now(),
                now(),
                #{userCode},
                0,
                0
            )
    </insert>
    <!--清空购物车-->
    <update id="clearEmpty" parameterType="com.xzsd.app.order.entity.AddOrder" >
        update
            t_good_shopping_cart
        set
            is_delete = 1
        where
            cart_code in
            <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        and
            is_delete = 0
    </update>
    <!--判断购物车中的每种商品库存是否充足,如果存在购物车中某一商品数量大于库存，那么返回这个商品编号-->
    <select id="judgementStock" parameterType="com.xzsd.app.order.entity.AddOrder" resultType="com.xzsd.app.order.entity.GoodBigThanLibs">
        select
            tcart.cart_code goodCode
        from
            t_good_manage tgood,
            t_good_shopping_cart tcart
        where
            tcart.good_code = tgood.good_code
        and
            tgood.is_delete = 0
        and
            tcart.cart_code in
        <foreach collection="cartCodeList" index="index"  open="(" separator="," close=")"  item="item">
            #{item}
        </foreach>
        and
            tcart.good_num &gt; tgood.good_lib_save
    </select>
    <!--查询哪些商品已下架-->
    <select id="goodsExpired" parameterType="com.xzsd.app.order.entity.AddOrder" resultType="com.xzsd.app.order.entity.GoodsExpired">
        select
            tcart.cart_code cartCode
        from
            t_good_manage tgood,
            t_good_shopping_cart tcart
        where
            tcart.good_code = tgood.good_code
        and
            tgood.is_delete = 0
        and
            (tgood.good_sale_end!='' and tgood.good_sale_end is not null  and tgood.good_sale_end &lt; now())
        and
            tcart.cart_code in
          <foreach collection="list" item="item" open="(" separator="," close=")" index="index">
              #{item}
          </foreach>
    </select>
    <!--修改物品数量-->
    <update id="updateGoodNum" parameterType="com.xzsd.app.order.entity.GoodBigThanLibs" >
          update
              t_good_shopping_cart tcart,
              t_good_manage tgood
          set
              tcart.good_num = tgood.good_lib_save
          where
              tgood.is_delete = 0
          and
              tcart.good_code = tgood.good_code
          and
              tcart.cart_code in
          <foreach collection="list" index="index" open="(" separator="," close=")" item="item">
              #{item}
          </foreach>
    </update>
    <!--查询-->
    <select id="queryOrderList" parameterType="com.xzsd.app.order.entity.AddOrder" resultType="com.xzsd.app.order.entity.Order">
        select
            tcart.user_code userCode,
            tgood.good_name goodName,
            tcart.good_code goodCode,
            tcart.good_num goodNum,
            tgood.good_selling_price goodPrice
        from
            t_good_shopping_cart tcart,
            t_good_manage tgood
        where
            tcart.cart_code in
        <foreach collection="list" index="index" open="(" separator="," close=")" item="item">
            #{item}
        </foreach>
        and
            tcart.is_delete = 0
        and
            tcart.good_num &gt; 0
        and
            tcart.good_code = tgood.good_code
    </select>
    <!--新增订单详情表-->
    <insert id="addOrderList" parameterType="com.xzsd.app.order.entity.Order" >
        INSERT
            INTO
                `t_order_ordergoods`(
                `orderG_code`,
                `order_code`,
                `orderG_name`,
                `good_code`,
                `orderG_num`,
                `orderG_s_price`,
                `orderG_image`,
                `create_time`,
                `create_user`,
                `is_delete`,
                `version`
                )
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.orderGCode},
            #{item.orderCode},
            #{item.goodName},
            #{item.goodCode},
            #{item.goodNum},
            #{item.goodPrice},
            #{item.goodImage},
            now(),
            #{item.createUser},
            0,
            0
            )
        </foreach>
    </insert>
    <!--新增顾客-->
    <insert id="addCustomer" parameterType="com.xzsd.app.order.entity.Customer" >
        INSERT
            INTO
              `t_order_customer`(
                `customer_code`,
                `shop_code`,
                `user_code`,
                `customer_order`,
                `customer_name`,
                `customer_acct`,
                `customer_sex`,
                `customer_phone`,
                `customer_email`,
                `create_time`,
                `create_user`,
                `customer_id_card`,
                `is_delete`
              )
            VALUES(
              #{customerCode},
              #{shopCode},
              #{userCode},
              #{customerOrder},
              #{customerName},
              #{customerAcct},
              #{customerSex},
              #{customerPhone},
              #{customerEmail},
              now(),
              #{userCode},
              #{customerIdCard},
              0
            )
    </insert>
    <!--查询顾客信息-->
    <select id="queryCustomerData" parameterType="com.xzsd.app.order.entity.Customer" resultType="com.xzsd.app.order.entity.Customer">
        select
            tbind.shop_code shopCode,
            tuser.user_name customerName,
            tuser.user_account customerAcct,
            tuser.user_sex customerSex,
            tuser.user_phone customerPhone,
            tuser.user_email customerEmail,
            tuser.user_id_card customerIdCard
        from
            t_store_bind tbind,
            t_user_infomation tuser
        where
            tuser.user_code = tbind.user_code
        and
            tuser.user_code = #{userCode}
    </select>


    <!--订单编号-->
    <select id="queryOrderDetail" parameterType="com.xzsd.app.order.entity.OrderDetail" resultMap="queryOrderDetailResultMap">
        select
           torder.order_code,
           torder.create_time,
           torder.order_state,
           tstore.shop_name,
           tstore.provinceCode,
           tstore.cityCode,
           tstore.distinctCode,
           tstore.shop_detail_address
        from
            t_order_manage torder,
            t_store_bind tbind,
            t_store_information tstore
        where
            torder.order_code = #{orderCode}
         and
            tbind.user_code = torder.user_code
        and
            tstore.shop_code = tbind.shop_code
         and
            torder.is_delete = 0
    </select>
    <!--根据门店编号获取对应的省市区名称以及详细地址-->
    <!--collection select-->
    <select id="selectList" parameterType="com.xzsd.app.order.entity.OrderDetail" resultType="com.xzsd.app.order.entity.OrderDetailGoodsList">
        select
            tgoods.good_code goodCode,
            tgoods.orderG_name goodName,
            tgoods.orderG_s_price goodSale,
            tgoods.orderG_pre goodPrec,
            tgoods.orderG_num goodNum,
            tgoods.orderG_image goodImageUrl
        from
            t_order_ordergoods tgoods
        where
            tgoods.order_code = #{orderCode}
        and
            tgoods.is_delete = 0
    </select>
    <!--查询订单详情映射resultMapp-->
    <resultMap id="queryOrderDetailResultMap" type="com.xzsd.app.order.entity.OrderDetail">
        <id property="orderCode" column="order_code"/>
        <result property="orderCreateTime" column="create_time"/>
        <result property="orderState" column="order_state"/>
        <result property="deliveryStore" column="shop_name"/>
        <result property="provinceCode" column="provinceCode"/>
        <result property="cityCode" column="cityCode"/>
        <result property="distinctCode" column="distinctCode"/>
        <result property="detailAddress" column="shop_detail_address"/>
        <collection property="orderGoodsList" javaType="list"  column="orderCode=torder.order_code"  select="selectList" ofType="com.xzsd.app.order.entity.OrderDetailGoodsList">
        </collection>
    </resultMap>
    <!--修改订单状态-->
    <update id="updateOrder" parameterType="com.xzsd.app.order.entity.UpdateOrder">
          update
              t_order_manage
          set
              order_state = #{orderState},
              update_user = #{updateUser}
          where
              order_code = #{orderCode}
    </update>
    <!--查询用户订单列表-->
    <select id="queryUserOrderList" parameterType="com.xzsd.app.order.entity.OrderListParam" resultMap="queryOrderList">
          select
              order_code,
              order_state
          from
              t_order_manage
          where
              user_code = #{userCode}
          and
              is_delete = 0
    </select>
    <!--查询用户订单列表详情-->
    <select id="queryOrderListListUnit" parameterType="com.xzsd.app.order.entity.OrderListParam" resultType="com.xzsd.app.order.entity.OrderListUnit">
          select
              good_code goodCode,
              orderG_name goodName,
              orderG_s_price goodSale,
              orderG_num goodNum,
              orderG_image imageUrl
          from
              t_order_ordergoods
          where
              order_code = #{orderCode}
          and
              is_delete = 0
    </select>
    <!--订单列表查询resultMap-->
    <resultMap id="queryOrderList" type="com.xzsd.app.order.entity.OrderList">
        <id property="orderCode" column="order_code"/>
        <result property="orderState" column="order_state"/>
        <collection property="orderGoodList" javaType="list"  column="orderCode=order_code"  select="queryOrderListListUnit" ofType="com.xzsd.app.order.entity.OrderListUnit">
        </collection>
    </resultMap>
    <!--新增订单商品评价-->
    <insert id="addOrderGoodsEva" parameterType="com.xzsd.app.order.entity.OrderEvaUnit" >
        INSERT
            INTO
              `t_goods_goodseva`(
                `comment_code`,
                `comment_good`,
                `user_code`,
                `comment_rank`,
                `comment_images`,
                `comment_content`,
                `comment_time`,
                `is_delete`,
                `version`
              )
            VALUES
              <foreach collection="list" index="index" item="item" separator=",">
                  (
                  #{item.commentCode},
                  #{item.goodCode},
                  #{item.createUser},
                  #{item.goodRank},
                  #{item.imageUrlList},
                  #{item.evaContent},
                  now(),
                  0,
                  0
                  )
              </foreach>
    </insert>
    <!--订单删除-->
    <update id="deleteOrder" parameterType="com.xzsd.app.order.entity.Order">
        update
            t_order_manage
        set
            is_delete = 1,
            update_time = now(),
            update_user = #{createUser}
        where
            is_delete = 0
        and
            order_code = #{orderCode}
    </update>
    <!--订单生成后：更新商品的 售出量  还有 库存量   [商品更新条件: 在售  时间在销售时间范围 没删除 库存足够]-->
    <update id="updateGoodRelative" parameterType="com.xzsd.app.order.entity.Order">
        <foreach collection="list" item="item" index="index" separator=";">
            update
                t_good_manage
            set
                good_lib_save - #{item.goodNum},
                good_saleNum + #{item.goodNum}
            where
                good_lib_save &gt; #{item.goodNum}
            and
                is_delete = 0
            and
                good_state = 2
            and
                now() between good_sale_time and good_sale_end
            and
                good_code = #{item.goodCode}
        </foreach>
    </update>
</mapper>